[
{
  "title": "QML Torch: Conceptual Quantum Layer Experiment",
  "date": "2025-09-25",
  "summary": "Initial experimental lab for QML Torch — explored how quantum superposition and entanglement can conceptually extend classical nonlinear modeling.",
  "summary_long": "<p>This lab marked the first experimental step toward <strong>QML Torch</strong>, focusing on the conceptual interface between classical and quantum representations. The intent was not to optimize performance but to probe structure—to examine how superposition and entanglement can replicate or extend nonlinear transformations found in deep learning. Using <code>PennyLane</code> simulators on a standard laptop, the experiment mapped interference patterns to classical feature space, providing a tangible foundation for later hybrid differentiable circuits integrated with PyTorch autograd. This work defined the architectural language and intuition that will guide future hardware-connected implementations.</p>",
  "notes": "Full lab notes and explanations are available in the project PDF: https://drive.google.com/file/d/1upald5Y7m3GdC2k4gwsqYBcodfCJXAes/view",
  "code": [
    {
      "label": "GitHub Repository",
      "lang": "link",
      "content": "https://github.com/simransummermalik/qml-torch-activity-one"
    }
  ]
},
{
  "title": "Quantum XOR — Visualizing Entanglement and Nonlinearity",
  "date": "2025-10-01",
  "summary": "Conceptual quantum reimagining of the classic XOR problem, inspired by the game XOR — built to show how quantum logic and interference patterns could replicate nonlinearity in ML decision spaces.",
  "summary_long": "<p>This lab extended the ideas behind <strong>QML Torch Activity One</strong> into a direct visual case study using the XOR dataset as both a classical benchmark and a conceptual testing ground for quantum structure. Inspired by the retro game <a href='https://www.crazygames.com/game/xor' target='_blank'>XOR</a>, this project explored how superposition and entanglement can act as information routing mechanisms, mirroring how nonlinear activations and feature crossings behave in classical deep learning.</p><p>Implemented fully on laptop-based simulators using <code>PennyLane</code> and <code>NumPy</code>, the experiment visualized the quantum circuit’s interference landscape as a differentiable decision surface. The focus was not on outperforming classical models, but on understanding how quantum transformations <em>encode logical nonlinearity without explicit activation functions</em>. The outcome served as both a teaching demo and a conceptual bridge toward hybrid layers that merge quantum data reuploading with PyTorch autograd.</p>",
  "notes": "Detailed notes and analysis PDF: https://drive.google.com/file/d/1upald5Y7m3GdC2k4gwsqYBcodfCJXAes/view\nAdditional documentation: 10_1 notes - Google Docs (1) (3).pdf",
  "code": [
    {
      "label": "GitHub Repository",
      "lang": "link",
      "content": "https://github.com/simransummermalik/quantum-xor"
    }
  ]
},
{
  "title": "Quantum Key Distribution — BB84 Protocol Experiment",
  "date": "2025-10-21",
  "summary": "Experimental implementation of the BB84 quantum key distribution (QKD) protocol using Qiskit, exploring quantum randomness, measurement disturbance, and eavesdrop detection.",
  "summary_long": "<p>This activity introduced the <strong>BB84 Quantum Key Distribution (QKD)</strong> protocol as both a conceptual and practical demonstration of secure information exchange through quantum mechanics. The experiment used <code>Qiskit</code> within a Google Colab environment to simulate the full BB84 process: random bit generation, polarization basis encoding, and measurement-based decoding between sender (Alice) and receiver (Bob). The session was paired with an interactive presentation designed to make quantum security principles intuitive for new researchers.</p><p>Students implemented the protocol’s logic on a simulated quantum backend (<code>AerSimulator</code>), visualized eavesdropping effects, and examined how measurement disturbance exposes interception attempts. The goal was not cryptographic optimization but <em>physical understanding</em>—showing how the fundamental laws of measurement and superposition provide unbreakable security guarantees. This lab established the foundation for integrating QKD methods with the QML Torch pipeline, emphasizing experiment reproducibility and hands-on intuition for quantum information flow.</p>",
  "notes": "Presentation: https://docs.google.com/presentation/d/1x09tz3PIPuQphaql1L4NC1NSv8HcCrKqfFxahYClHyI/edit\nColab notebook: https://colab.research.google.com/drive/1i2dr0py-rvj61NzPHdZoCcs2W7eNKzuY?usp=sharing\nDetailed notes: BB84 !!!.pdf",
  "code": [
    {
      "label": "Google Colab Notebook",
      "lang": "link",
      "content": "https://colab.research.google.com/drive/1i2dr0py-rvj61NzPHdZoCcs2W7eNKzuY?usp=sharing"
    }
  ]
},
{
  "title": "Quantum Optimization — UNC Charlotte Traveling Salesman (QAOA)",
  "date": "2025-10-21",
  "summary": "Hands-on experiment demonstrating the Quantum Approximate Optimization Algorithm (QAOA) using UNC Charlotte buildings to solve the Traveling Salesman Problem both classically and quantumly.",
  "summary_long": "<p>This session extended the division’s applied quantum computing work into optimization theory using the <strong>Quantum Approximate Optimization Algorithm (QAOA)</strong>. The lab framed the <em>Traveling Salesman Problem (TSP)</em> as a real-world example of mapping a classical objective into a quantum Hamiltonian. Instead of abstract cities, participants selected UNC Charlotte landmarks—like Woodward Hall, EPIC, Atkins, and the Student Union—and encoded their pairwise distances as energy terms. The notebook implemented both <code>OR-Tools</code> for deterministic classical routing and <code>Qiskit</code> for hybrid quantum optimization, comparing exact and approximate paths under identical constraints.</p><p>The meeting emphasized conceptual depth over raw performance: understanding how <em>distance becomes energy</em>, how <em>penalty weights enforce constraints</em>, and how <em>QAOA circuit layers</em> translate into optimization power. Members experimented with sliders for <em>reps</em>, <em>maxiter</em>, <em>shots</em>, and <em>penalty</em> to see how circuit depth, iteration count, and measurement fidelity shape the quantum learning process. By validating that quantum and classical routes converged for small instances, the group demonstrated successful QUBO translation and hybrid loop design—precisely the skillset used in current research at IBM, NASA, and Google Quantum AI.</p><p>This marks a milestone for the Quantum ML Division: transforming theoretical quantum optimization into a reproducible, data-driven experiment. The next step will involve visualizing <strong>energy landscapes</strong> and exploring cross-integration between the QAOA pipeline and <strong>QML Torch</strong>.</p>",
  "notes": "Meeting notes PDF: assets/tsp.pdf",
  "code": [
    {
      "label": "Google Colab Notebook",
      "lang": "link",
      "content": "https://colab.research.google.com/drive/1i2dr0py-rvj61NzPHdZoCcs2W7eNKzuY?usp=sharing"
    }
  ]
}



]
